#!/usr/bin/env bash

set -eu
set -o pipefail

source $(dirname $0)/init.sh

synonymous="${SYMPRI_PATH}/src/input/synonymous.py -O ${SYMPRI_PATH}/data/refGene.pkl*"

control=$SYMPRI_CONTROL.merged.arff
src=$SYMPRI_PATH/src
data=$SYMPRI_PATH/data

function usage {
    cat <<EOF
Usage: $0 VCF OUTDIR

Annotates rare, synonymous variants in VCF file,
creating files necessary to run this tool.
OUTDIR should be a directory specific to the VCF file.

Existing files in OUTDIR are NOT overwritten, so this
script can be stopped and resumed.

Creates OUTDIR if it does not exit.
Will use TMPDIR='$TMPDIR' as needed.
EOF
    exit 1
}


if [[ $# -ne 2 ]]; then
    usage
fi
vcf="$1"
outdir="$2"

if [[ ! -e "$vcf" ]]; then
    echo -e "Error: missing input file: $vcf\n" >&2
    usage
fi

base=$(basename "$vcf" .vcf)

function skip_if_exists {
    local f="$1"
    if [[ -e "$f" ]]; then
	echo "Found existing: $f..." >&2
    fi
    test ! -e "$f"
}

init_message

mkdir -pv $outdir
# Filter to just synonymous variants
# Adds gene and transcript information
out=$base.syn
skip_if_exists $outdir/$out \
    && echo "Filtering for synonymous exonic variants..." >&2 \
    && $synonymous filter $vcf | egrep -v "^Y\b" > $TMPDIR/$out \
    && echo "Removing variants on chromosome Y..." >&2 \
    && mv $TMPDIR/$out $outdir/$out
test -e $outdir/$out

# Filtering by 1000 Genomes Project AF
out=$base.rare
skip_if_exists $outdir/$out \
    && echo "Filtering by 1000 Genomes Project allele frequency..." >&2 \
    && cut -f 1,2,5 $outdir/$base.syn \
       | $src/input/1000gp.py dummy $data/1000gp.refGene.pkl* \
       | paste - $outdir/$base.syn \
       | awk -F"\t" '$1 == "." || $1 < '"$SYMPRI_AF_THRESH"';' | cut -f 2- > $TMPDIR/$out \
    && mv $TMPDIR/$out $outdir/$out
test -e $outdir/$out

# Annotate with mrna sequence
out=$base.mrna
skip_if_exists $outdir/$out \
    && echo "Annotating with mRNA sequence..." >&2 \
    && $synonymous annotate $outdir/$base.rare > $TMPDIR/$out \
    && mv $TMPDIR/$out $outdir/$out
test -e $outdir/$out

# Annotate with features
out=$outdir/$base.raw.mat
skip_if_exists $out \
    && echo "Annotating features from MRNA file..." >&2 \
    && $src/convert/mrna2mat.sh $outdir/$base.mrna $outdir/$base.raw
test -e $out

# Reformat matrix for WEKA
out=$outdir/$base.raw.arff
skip_if_exists $out \
    && echo "Creating ARFF file (for WEKA)..." >&2 \
    && $src/convert/mat2arff.sh "$base" 0 $outdir/$base.raw{.mat,}
test -e $out

# Standardize according to training dataset
out=$base.std.arff
skip_if_exists $outdir/$out \
    && echo "Standardizing ARFF file according to control data..." >&2 \
    && java -Xmx1800m weka.filters.unsupervised.attribute.Standardize \
       -b -i $control -o /dev/null -r $outdir/$base.raw.arff -s $TMPDIR/$out \
    && mv $TMPDIR/$out $outdir/$out
test -e $outdir/$out

# Convert back into mat for analysis
out=$base.std.mat
skip_if_exists $outdir/$out \
    && echo "Creating MAT file to provide to model..." >&2 \
    && $src/convert/arff2mat.sh $outdir/$base.std.arff > $TMPDIR/$out \
    && mv $TMPDIR/$out $outdir/$out
test -e $outdir/$out

echo "$0: SUCCESS" >&2